#!/bin/bash

scriptdir="$(sdir="$(dirname "$0")"; cd "$sdir"; pwd)"

logfile=/tmp/link-clab-to-core.log

# get core session info
#DEV
pydir="$(ls -td /tmp/pycore*)"
#DEV
coreid=3node1

# get node info
#DEV
node=n2
#DEV
nid="$pydir/$node"
nld="$(vcmd -c"$pydir/$node" ip link show)"
#DEV
psd="$(ps -ef | grep vnoded | grep $node)"

npid="$(echo "$psd" | awk '{print $2}')"

# add namespace 
nsrdir=/run/netns
if [[ ! -d $nsrdir ]] ; then
    sudo mkdir -p $nsrdir
fi

#TODO:
# just assume it's the right one for now
# if it already exists, later should check 
netnmsp=$coreid-$node
nsfile=$nsrdir/$netnmsp
if [[ ! -f $nsfile ]] ; then
    echo "$(date +%Y%m%d-%H:%M:%S): Executing: Naming anonymous namespace for node $node with name $netnmsp" | tee -a $logfile
    sudo touch $nsfile 2>&1 | tee -a $logfile
    sudo chmod 0 $nsfile 2>&1 | tee -a $logfile
    sudo mount --bind /proc/$npid/ns/net $nsfile 2>&1 | tee -a $logfile
fi

# setup core node extra bridges and interfaces 
nintfs="$(vcmd -c "$nid" "$scriptdir"/setup-core-link-1)"

for nintf in $nintfs ; do 
    nif=$node-$nintf
    cnif=$nif-core
    hnif=$nif-host
    if [[ ! $nintf =~ ^eth[[:digit:]]+ ]] ; then
        continue
    fi
    if ! ip link show dev $hnif > /dev/null 2>&1 ; then 
        echo "$(date +%Y%m%d-%H:%M:%S): Running:   sudo ip link add $hnif type veth peer name $cnif" | tee -a $logfile
        sudo ip link add $hnif type veth peer name $cnif 2>&1 | tee -a $logfile
    fi
    if ip link show dev $hnif > /dev/null 2>&1 ; then 
        echo "$(date +%Y%m%d-%H:%M:%S): Running:   sudo ip link set dev $hnif up" | tee -a $logfile
        sudo ip link set dev $hnif up 2>&1 | tee -a $logfile
        echo "$(date +%Y%m%d-%H:%M:%S): Running:   sudo ip link set $cnif netns $netnmsp" | tee -a $logfile
        sudo ip link set $cnif netns $netnmsp 2>&1 | tee -a $logfile
    fi
done 

vcmd -c "$nid" "$scriptdir"/setup-core-link-2 "$nintfs"

# remove IPs from the node
vcmd -c "$nid" "$scriptdir"/remove-core-IPs "$nintfs"

# remove processes from the node
vcmd -c "$nid" "$scriptdir"/remove-core-processes "$nintfs"

# create containerlab configuration
clid=$coreid-$node
clcfg="$scriptdir/$clid.clab.yml"
echo -n "" > "$clcfg"
echo "name: $clid

topology:
  nodes:
    $node:
      kind: vr-csr
      image: clab/vr-csr-ssh:17.03.02

  links:
" >> "$clcfg"

for nintf in $nintfs ; do 
    if [[ ! $nintf =~ ^eth[[:digit:]]+$ ]] ; then
        continue
    fi
    intfnum="${nintf/eth/}"
    clabintfnum=$(( $intfnum + 1 ))
    clabintf="eth$clabintfnum"
    echo "    - endpoints: [\"$node:$clabintf\", \"host:$node-$nintf-clab\"]" >> "$clcfg"
done

# start containerlab node
echo "$(date +%Y%m%d-%H:%M:%S): Running:   sudo containerlab deploy --topo '$clcfg'" | tee -a $logfile
if ! sudo containerlab deploy --topo "$clcfg" 2>&1 | tee -a $logfile ; then
    echo "Failed to create the CSR container so exiting." | tee -a $logfile
    exit 1
fi

sleep 10

# add final bridges
# DEV
# change all names to include core model in use
for nintf in $nintfs ; do 
    if [[ ! $nintf =~ ^eth[[:digit:]]+ ]] ; then
        continue
    fi
    nif=$node-$nintf
    clif=$nif-clab
    hnif=$nif-host
    clbr=$nif-br-clab
    if ip link show dev $hnif > /dev/null 2>&1 ; then 
        if ! ip link show dev $clbr > /dev/null 2>&1 ; then 
            echo "$(date +%Y%m%d-%H:%M:%S): Running:   sudo brctl addbr $clbr" | tee -a $logfile
            sudo brctl addbr $clbr 2>&1 | tee -a $logfile
            echo "$(date +%Y%m%d-%H:%M:%S): Running:   sudo ip link set dev $clbr up" | tee -a $logfile
            sudo ip link set dev $clbr up 2>&1 | tee -a $logfile
        fi
        if ip link show dev $clif > /dev/null 2>&1 ; then 
            echo "$(date +%Y%m%d-%H:%M:%S): Running:   sudo brctl addif $clbr $clif" | tee -a $logfile
            sudo brctl addif $clbr $clif 2>&1 | tee -a $logfile
        fi
        if ip link show dev $hnif > /dev/null 2>&1 ; then 
            echo "$(date +%Y%m%d-%H:%M:%S): Running:   sudo brctl addif $clbr $hnif" | tee -a $logfile
            sudo brctl addif $clbr $hnif 2>&1 | tee -a $logfile
        fi
    fi
done 

# verify containerlab node up

# load containerlab node configuration


